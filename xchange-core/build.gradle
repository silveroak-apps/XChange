/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'java'
    id 'idea'
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    google()
    mavenCentral()
    maven {
        url = uri('https://oss.sonatype.org/content/groups/public/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }

}

javadoc {
    enabled = false
}
jar {
    enabled = true
}

dependencies {
    api 'javax.annotation:javax.annotation-api:1.3.2'
    api 'com.github.mmazi:rescu:3.0'
    api 'org.apache.commons:commons-lang3:3.12.0'
    api 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'
    api 'com.google.guava:guava:31.1-jre'
    api 'io.github.resilience4j:resilience4j-all:1.7.0'
    testImplementation 'ch.qos.logback:logback-classic:1.4.5'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
}

group = 'org.knowm.xchange'
version = '5.1.2-SNAPSHOT'
description = 'XChange Core'
sourceCompatibility = '11'

configurations.all {
    resolutionStrategy {
        force 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'
        forcedModules = ['jakarta.ws.rs:jakarta.ws.rs-api:3.1.0']
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
